@model CreateColorViewModel

@{
    ViewData["Title"] = "Edit";

}


<section class="container my-4">
    <h1 class="mb-3">@ViewData["Title"]</h1>
    <h4 class="mb-4">@Model.Name</h4>

    <form asp-action="Edit" method="post" class="card shadow-sm p-4">
        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
        @* Color Name *@
        @{
            if (User.IsInRole("Admin"))
            {
                <div class="form-group mb-3">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" name="Name" type="text" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            }
            else
            {
                <div class="form-row mb-3 disabled">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" name="Name" type="text" class="form-control opacity-50" readonly />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            }
        }
        @* Start Color, End Color, Opacity *@
        <div class="form-row mb-4">
            <div class="col-md-4">
                <label asp-for="StartColor" class="control-label"></label>
                <input asp-for="StartColor" type="color" class="form-control" />
                <span asp-validation-for="StartColor" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="EndColor" class="control-label"></label>
                <input asp-for="EndColor" type="color" class="form-control" />
                <span asp-validation-for="EndColor" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="Opacity" class="control-label"></label>
                <div class="d-flex align-items-center">
                    <input asp-for="Opacity" type="range" class="form-control-range" min="0" max="1" step="0.01" id="opacityRange" />
                    <input type="text" id="opacityValue" readonly class="form-control ml-2" style="width:60px;" />
                </div>
                <span asp-validation-for="Opacity" class="text-danger"></span>
            </div>
        </div>

        @* Darkmode Colors and Opacity *@
        <div class="form-row mb-4">
            <div class="col-md-4">
                <label asp-for="DarkStartColor" class="control-label"></label>
                <input asp-for="DarkStartColor" type="color" class="form-control" />
                <span asp-validation-for="DarkStartColor" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="DarkEndColor" class="control-label">Gradient Color (Optional)</label>
                <input asp-for="DarkEndColor" type="color" class="form-control" />
                <span asp-validation-for="DarkEndColor" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="DarkOpacity" class="control-label"></label>
                <div class="d-flex align-items-center">
                    <input asp-for="DarkOpacity" type="range" class="form-control-range" min="0" max="1" step="0.01" id="darkOpacityRange" />
                    <input type="text" id="darkOpacityValue" readonly class="form-control ml-2" style="width:60px;" />
                </div>
                <span asp-validation-for="DarkOpacity" class="text-danger"></span>
            </div>
        </div>

        <!-- Submit -->
        <div class="d-flex justify-content-between align-items-center">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-plus-circle mr-1"></i>Create
            </button>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left mr-1"></i>Back to Colors
            </a>
        </div>
    </form>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const slider = document.getElementById('opacityRange');
            const display = document.getElementById('opacityValue');
            const darkSlider = document.getElementById('darkOpacityRange');
            const darkDisplay = document.getElementById('darkOpacityValue');

            function updateValue() {
                display.value = slider.value;
            }

            function darkUpdateValue() {
                darkDisplay.value = darkSlider.value;
            }

            slider.addEventListener('input', updateValue);
            darkSlider.addEventListener('input', darkUpdateValue);

            // Initialize values on load
            updateValue();
            darkUpdateValue();
        });
    </script>
}
